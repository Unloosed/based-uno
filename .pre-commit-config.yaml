# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
    -   id: trailing-whitespace
    -   id: end-of-file-fixer
    -   id: check-yaml
    -   id: check-toml
    -   id: check-added-large-files
    -   id: detect-private-key

# Using Ruff for both linting and formatting
-   repo: https://github.com/astral-sh/ruff-pre-commit
    # Ruff version should ideally be kept in sync with pyproject.toml
    rev: v0.12.1 # Synced with pyproject.toml and requirements-dev.txt
    hooks:
    -   id: ruff
        name: ruff (linter)
        args: [--fix, --exit-non-zero-on-fix]
# Black for formatting
-   repo: https://github.com/psf/black
    rev: '25.1.0' # Version from requirements-dev.txt
    hooks:
    -   id: black
        language_version: python3.12
        args: ["--config=pyproject.toml"]

# Mypy hook (optional, can be slow, already in CI)
# -   repo: https://github.com/pre-commit/mirrors-mypy
#     rev: 'v1.10.0' # Or use the version from pyproject.toml
#     hooks:
#     -   id: mypy
#         # You might need to specify additional dependencies or args for mypy
#         # especially if your project has specific setup needs or uses a dmypy daemon.
#         # args: [--config-file=pyproject.toml] # if mypy config is in pyproject.toml
#         # pass_filenames: false # if mypy should analyze the whole project
#         additional_dependencies: [
#             # Add any specific mypy plugins or type stubs here if needed
#             # e.g. "types-requests"
#         ]
#         # Exclude files if necessary, e.g.
#         # exclude: ^(docs/|tests/fixtures)/
#
# Note on Mypy with pre-commit: It can be slow for large projects.
# Consider running it in CI only or using it selectively.
# For this project, given its current size, it might be acceptable.
# I'll leave it commented out for now, can be enabled if desired.
# The CI pipeline already runs mypy.
